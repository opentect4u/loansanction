{"version":3,"file":"static/js/864.ef144cb0.chunk.js","mappings":"6PAWA,MA0EA,EA1EmBA,KACjB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAK7BC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJE,SAAS,qBACTD,MAAM,kCAQLE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAfkB,CAClBJ,MAAO,IAePK,SARgBC,IAChBV,GAAW,GACXW,QAAQC,IAAIF,GACZV,GAAW,GACXM,EAAOO,WAAW,EAKlBX,mBACAY,iBAAiB,IAGrB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kEAAiEC,UAC5EC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAAEC,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,WAAY,CAACC,MAAM,GAAIC,KAAK,UACxFV,UAAU,gDAA+CC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC7CF,EAAAA,EAAAA,KAAA,OAAKY,IAAKC,EAAMZ,UAAU,YAAYa,IAAI,qBAE9CX,EAAAA,EAAAA,MAAA,QAAOT,SAAUH,EAAOwB,aAAab,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CACZC,YAAY,sBACZN,KAAK,QACLO,MAAM,aACNC,KAAK,QACLC,gBAAiB7B,EAAOI,OAAON,MAC/BgC,aAAc9B,EAAO8B,aACrBC,WAAY/B,EAAO+B,WACnBC,KAAM,IAENhC,EAAOiC,OAAOnC,OAASE,EAAOkC,QAAQpC,OACtCW,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAACC,MAAOpC,EAAOiC,OAAOnC,QAC3B,MACHW,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAI,IAAI3B,UACdC,EAAAA,EAAAA,MAAA,KAAG2B,MAAM,kEAAkEC,GAAG,kBAAiB7B,SAAA,EAC/FF,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAAC/B,UAAU,YAAW,gBAMtCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UACpCF,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CACXC,WAAWlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAe,CAACC,MAAI,IAChCC,KAAM,EACNpC,UAAU,2CACVqC,SAAUtD,EAAQkB,UAEdF,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASV,UAAU,yGAAwGC,SAAC,wBAQ7I,C","sources":["Screens/Appraiser/ForgotPass.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport LOGO from '../../Assets/Images/signinlogo.png'\r\nimport TDInputTemplate from '../../Components/TDInputTemplate'\r\nimport { motion } from \"framer-motion\"\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { Spin } from \"antd\";\r\nimport { LeftOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport VError from '../../Components/VError';\r\n\r\nconst ForgotPass = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n      };\r\n      const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n          .required(\"Email is required\")\r\n          .email(\"Not a correct a email format\"),\r\n      });\r\n      const onSubmit = (values) => {\r\n        setLoading(true);\r\n        console.log(values);\r\n        setLoading(false)\r\n        formik.resetForm()\r\n      }\r\n      const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema,\r\n        validateOnMount: true,\r\n      });\r\n     \r\n    return (\r\n        <div className='bg-green-900 flex justify-center items-center h-screen w-screen'>\r\n            <motion.div  initial={{opacity:0}} animate={{opacity:1}} transition={{delay:0.5,type:'spring'\r\n      }} className='bg-white h-64 w-96 px-6 rounded-3xl shadow-lg'  >\r\n                <div className='flex items-center justify-center'>\r\n                    <img src={LOGO} className=\"h-20 mt-4\" alt=\"Flowbite Logo\" />\r\n                </div>\r\n                <form  onSubmit={formik.handleSubmit}>\r\n                <div className='my-3'>          \r\n                <TDInputTemplate\r\n                    placeholder=\"youremail@gmail.com\"\r\n                    type=\"email\"\r\n                    label=\"Your email\"\r\n                    name=\"email\"\r\n                    formControlName={formik.values.email}\r\n                    handleChange={formik.handleChange}\r\n                    handleBlur={formik.handleBlur}\r\n                    mode={1}\r\n                  />\r\n                   {formik.errors.email && formik.touched.email ? (\r\n                    <VError title={formik.errors.email} />\r\n                  ) : null}\r\n                   <Link to={'/'}>\r\n                   <a class=\"mt-1 text-xs flex items-center text-gray-500 dark:text-gray-300\" id=\"file_input_help\">\r\n                   <LeftOutlined className='text-xs'/>Back\r\n                    \r\n                    </a>\r\n                   </Link>\r\n                </div>\r\n               \r\n                <div className='block text-sm'>\r\n                    <div className='flex justify-center'>\r\n                    <Spin\r\n              indicator={<LoadingOutlined spin />}\r\n              size={5}\r\n              className=\"text-emerald-600 w-52 dark:text-gray-400\"\r\n              spinning={loading}\r\n            >\r\n                  <button type=\"submit\" className=\"bg-green-900 hover:duration-500 w-full hover:scale-105 hover:bg-green-800  text-white p-3 rounded-full\">Submit</button>\r\n                  </Spin>\r\n                  </div>\r\n                </div>\r\n\r\n                </form>\r\n               \r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPass"],"names":["ForgotPass","loading","setLoading","useState","validationSchema","Yup","email","required","formik","useFormik","initialValues","onSubmit","values","console","log","resetForm","validateOnMount","_jsx","className","children","_jsxs","motion","div","initial","opacity","animate","transition","delay","type","src","LOGO","alt","handleSubmit","TDInputTemplate","placeholder","label","name","formControlName","handleChange","handleBlur","mode","errors","touched","VError","title","Link","to","class","id","LeftOutlined","Spin","indicator","LoadingOutlined","spin","size","spinning"],"sourceRoot":""}